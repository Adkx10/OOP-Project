package MotorPH;

import com.opencsv.exceptions.CsvValidationException;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.PrintStream;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

public class ViewSalary extends javax.swing.JFrame {

    private String empNo;
    private HomePage homePage;
    private Employee currentUser;

    public ViewSalary() { //Default Constructor
        this(null, null);
    }

    public ViewSalary(HomePage homePage, String empNo) { // Constructor with HomePage and Employee Number
        this.homePage = homePage;
        this.currentUser = (homePage != null) ? homePage.getCurrentUser() : null;
        this.empNo = (currentUser != null) ? currentUser.getEmployeeNo() : null;
        initComponents();
        showDate();
        this.setLocationRelativeTo(null);
    }

    public void setCurrentUser(Employee currentUser) {
        this.currentUser = currentUser;
    }

    private void showDate() {
        SimpleDateFormat s = new SimpleDateFormat("yyyy-MM-dd");
        Date d = new Date();
        date.setText(s.format(d));
    }

    public void viewOwnSalary() {
        viewCompensation.setVisible(true);
        employeeNo.setText(empNo);
        employeeNo.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        label4 = new java.awt.Label();
        date = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        label3 = new java.awt.Label();
        employeeNo = new javax.swing.JTextField();
        hw = new javax.swing.JTextField();
        viewButton = new javax.swing.JButton();
        backButton = new javax.swing.JButton();
        viewCompensation = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        showData = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("View Salary");
        setBackground(new java.awt.Color(204, 204, 204));
        setMinimumSize(new java.awt.Dimension(700, 540));

        jPanel1.setBackground(new java.awt.Color(0, 102, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(150, 100));

        label4.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label4.setText("View Salary");

        date.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        date.setText("jLabel1");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(date)
                .addGap(20, 20, 20))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(70, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        label1.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label1.setText("Employee No.:");

        label2.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        label2.setText("Month :");

        label3.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        label3.setText("Enter Employee Data To View Salary");

        viewButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        viewButton.setText("View Salary");
        viewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewButtonActionPerformed(evt);
            }
        });

        backButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        backButton.setText("< Back");
        backButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backButtonActionPerformed(evt);
            }
        });

        viewCompensation.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        viewCompensation.setText("View Compensation Details");
        viewCompensation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewCompensationActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backButton))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(viewCompensation)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(employeeNo)
                                    .addComponent(hw, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(18, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(viewButton)
                .addGap(92, 92, 92))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hw, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addComponent(viewButton)
                .addGap(18, 18, 18)
                .addComponent(viewCompensation)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 158, Short.MAX_VALUE)
                .addComponent(backButton)
                .addContainerGap())
        );

        label2.getAccessibleContext().setAccessibleName("Month (Ex. July):");
        hw.getAccessibleContext().setAccessibleName("");
        hw.getAccessibleContext().setAccessibleDescription("");

        showData.setEditable(false);
        showData.setColumns(20);
        showData.setRows(5);
        showData.setWrapStyleWord(true);
        showData.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jScrollPane2.setViewportView(showData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
                .addGap(14, 14, 14))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    // To view the newly added employee, its credentials must be created first.
    private void viewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewButtonActionPerformed
        try {
            String enteredEmpNo = employeeNo.getText().trim();
            String month = hw.getText().trim();

            if (enteredEmpNo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter an employee number.",
                        "Invalid Input", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Initialize Objects
            Employee data = Employee.createEmployeeInstance(enteredEmpNo);

            // Access Control Before Fetching Data
            if (currentUser instanceof Manager manager) {
                if (data instanceof Manager && !enteredEmpNo.equals(manager.getEmployeeNo())) {
                    JOptionPane.showMessageDialog(this, "Access Denied! You cannot view other managers' salaries.",
                            "Restricted Access", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }

            // Admin has full access, so no restriction is needed.
            // Catch an invalid input of employee number
            if (data == null) {
                JOptionPane.showMessageDialog(this, "Employee not found!", "Search Result", JOptionPane.WARNING_MESSAGE);
                return;
            }

            Attendance attend = new Attendance();

            StringBuilder salaryInfoText = new StringBuilder();

            // Set Employee Details
            attend.SetEmployeeNo(enteredEmpNo);
            attend.SetMonth(month);
            data.setEmployeeNo(enteredEmpNo);

            // Compute Attendance Before Fetching Salary
            attend.ComputeHourWorked();

            // Verify if employee exists before proceeding
            if (!data.readData(enteredEmpNo)) {
                JOptionPane.showMessageDialog(this, "Employee not found!", "Search Result", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Calculate Salary
            double allowances = data.getRiceAllowance() + data.getPhoneAllowance() + data.getClothAllowance();
            double baseSalary = (data.getHourlyRate() * attend.FinalHW()) + allowances;

            // Deduct Contributions
            Deduct govt = new Deduct(baseSalary);
            ByteArrayOutputStream output = new ByteArrayOutputStream();
            PrintStream ps = new PrintStream(output);
            PrintStream old = System.out;
            System.setOut(ps);
            govt.Contributions();
            System.out.flush();
            System.setOut(old);
            String deductOutput = output.toString();

            DecimalFormat df = new DecimalFormat("#,##0.00");

            // Display Salary Details
            if (attend.FinalHW() != 0) {
                salaryInfoText.append("Employee No.: ").append(data.getEmployeeNo()).append("\n");
                salaryInfoText.append("Employee Name: ").append(data.getEmployeeFN()).append(" ").append(data.getEmployeeLN()).append("\n");
                salaryInfoText.append("Month: ").append(attend.Month()).append("\n");
                salaryInfoText.append("Hours Worked: ").append(attend.FinalHW()).append("\n");
                salaryInfoText.append("Hourly Rate: ").append(data.getHourlyRate()).append(" PHP").append("\n");
                salaryInfoText.append("\n------------------ Allowances ------------------").append("\n");
                salaryInfoText.append("Rice Subsidy: ").append(data.getRiceAllowance()).append("\n");
                salaryInfoText.append("Phone: ").append(data.getPhoneAllowance()).append("\n");
                salaryInfoText.append("Clothing: ").append(data.getClothAllowance()).append("\n");
                salaryInfoText.append("Gross Salary: ").append(df.format(baseSalary)).append("\n");
                salaryInfoText.append(" ").append(deductOutput);
            } else {
                salaryInfoText.append("\n\t*** No Record For This Month! ***").append("\n");
            }

            // Show Salary Info
            showData.setText(salaryInfoText.toString());

        } catch (CsvValidationException | IOException | ParseException | NumberFormatException ex) {
            Logger.getLogger(EmployeeData.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_viewButtonActionPerformed

    private void backButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backButtonActionPerformed
        homePage.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backButtonActionPerformed

    private void viewCompensationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewCompensationActionPerformed
        try {
            // Get the value entered by the user for employee number
            this.empNo = employeeNo.getText();

            if (empNo.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Please enter an employee number.",
                        "Invalid Input", JOptionPane.WARNING_MESSAGE);
                return;
            }

            // Initialize instance of 'Employee' class
            Employee data = Employee.createEmployeeInstance(empNo);

            if (currentUser instanceof Manager manager) {
                if (data instanceof Manager && !empNo.equals(manager.getEmployeeNo())) {
                    JOptionPane.showMessageDialog(this, "Access Denied! You cannot view other managers' salaries.",
                            "Restricted Access", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            // Catch an invalid input of employee number
            if (data == null) {
                JOptionPane.showMessageDialog(this, "Employee not found!", "Search Result", JOptionPane.WARNING_MESSAGE);
                return;
            }

            StringBuilder infoText = new StringBuilder();

            // Set the employee number in the 'Employee' object
            data.setEmployeeNo(empNo);

            // Read employee Employee to display
            data.readData(empNo);

            // To print strings on the text field showData
            ByteArrayOutputStream output = new ByteArrayOutputStream();
            PrintStream ps = new PrintStream(output);
            PrintStream old = System.out;
            System.setOut(ps);
            System.out.flush();
            System.setOut(old);

            // Construct the salary information
            infoText.append("Employee No.: ").append(data.getEmployeeNo()).append("\n\n");
            infoText.append("Employee Name: ").append(data.getEmployeeFN()).append(" ").append(data.getEmployeeLN()).append("\n\n");
            infoText.append("Basic Salary: ").append(data.getBasicSalary()).append("\n\n");
            infoText.append("Rice Subsidy: ").append(data.getRiceAllowance()).append("\n\n");
            infoText.append("Phone Allowance: ").append(data.getPhoneAllowance()).append("\n\n");
            infoText.append("Clothing Allowance: ").append(data.getClothAllowance()).append("\n\n");
            infoText.append("Gross Semi-monthly Rate: ").append(data.getGrossSemiMonthly()).append("\n\n");
            infoText.append("Hourly Rate: ").append(data.getHourlyRate()).append("\n\n");
            showData.setText(infoText.toString());
        } catch (CsvValidationException | IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_viewCompensationActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backButton;
    private javax.swing.JLabel date;
    private javax.swing.JTextField employeeNo;
    private javax.swing.JTextField hw;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private javax.swing.JTextArea showData;
    private javax.swing.JButton viewButton;
    private javax.swing.JButton viewCompensation;
    // End of variables declaration//GEN-END:variables
}
